define([    'underscore',], function(_) {    function DataHelper(value) {        return (value &&                typeof value === 'object' &&                !Array.isArray(value) &&                value.hasOwnProperty('__root__'))            ? value            : new DataHelperWrapper(value);    }    function DataHelperWrapper(value) {        this.__root__ = value;    }    DataHelperWrapper.prototype = DataHelper.prototype;    // forEach(<hierarchy level>, <params>)    // forEach(<hierarchy level>, <callback>)    // <params> = {    //      callback: <function>    //      filter: <filter>    //      }    // <filter> = 'string' â†’ if node has this property == true    DataHelper.prototype.forEach = function(nodeType, params, thisArg) {        var filter, callback;        if (typeof params !== 'function') {            filter = params.filter;            callback = params.callback || _.noop();        } else {            callback = params;        }        if (thisArg !== void 0) {            callback = _.createCallback(callback, thisArg);        }        function deep(node) {            if (filter && !node[filter]) { return; }            if (node.node_type === nodeType) {                callback(node);            } else {                _.forEach(node.nodes, deep);            }        }        deep(this.__root__);    }; // forEach    return DataHelper;});