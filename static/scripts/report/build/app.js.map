{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","static/scripts/report/src/app.js","static/scripts/report/src/collections/outgoing_collection.js","static/scripts/report/src/models/outgoing_model.js","static/scripts/report/src/templates/outgoing_form_template.html","static/scripts/report/src/templates/outgoing_table_item_template.html","static/scripts/report/src/templates/outgoing_table_template.html","static/scripts/report/src/views/outgoing_table_view.js","static/scripts/report/src/views/outgoing_view.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnfile":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var OutgoingView = require('./views/outgoing_view');\r\nvar OutgoingTableView = require('./views/outgoing_table_view');\r\nvar OutgoingCollection = require('./collections/outgoing_collection');\r\n$(function() {\r\n    var outgoing_collection = new OutgoingCollection();\r\n    outgoing_collection.fetch().done(function(){\r\n      var outgoing = new OutgoingView({collection: outgoing_collection});\r\n      var outgoing_list = new OutgoingTableView({collection: outgoing_collection});\r\n    })\r\n});\r\n","var OutgoingModel = require('../models/outgoing_model');\r\n\r\nvar OutgoingCollection = Backbone.Collection.extend({\r\n    url: '/handlers/outgoinglist/',\r\n    model: OutgoingModel\r\n});\r\n\r\nmodule.exports = OutgoingCollection;\r\n","var OutgoingModel = Backbone.Model.extend({\r\n    urlRoot:'/handlers/outgoing',\r\n    defaults:{\r\n        correspondent: '',\r\n        //name: '',\r\n        type: '',\r\n        note: '',\r\n        number: 0,\r\n        date: '',\r\n        user: ''\r\n    }\r\n});\r\n\r\nmodule.exports = OutgoingModel;\r\n","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"row\">\\r\\n<form class=\"form-horizontal span7\">\\r\\n\\r\\n   <div class=\"control-group\">\\r\\n    <label class=\"control-label\" for=\"correspondent\">Адресат</label>\\r\\n    <div class=\"controls\">\\r\\n    <div id=\"correspondent-dropdown\">\\r\\n    <input type=\"text\" id=\"correspondent\" autocomplete=\"off\" placeholder=\"Адресат\">\\r\\n    <div id=\"cor-exists\" class=\"alert alert-warning hide\">\\r\\n        Введённое название существует в БД. Установить связь?&nbsp;&nbsp;<a id=\"select-corr\" class=\"btn\" href=\"javascript:;\">Выбрать</a>\\r\\n    </div>\\r\\n         <ul id=\"corr-dropdown-menu\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\"></ul>\\r\\n     </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\"control-group\">\\r\\n    <label class=\"control-label\" for=\"outgoing-type\">Тип</label>\\r\\n    <div class=\"controls\">\\r\\n     <select id=\"outgoing-type\">\\r\\n         <option value=\"\">Выберите значение</option>\\r\\n          ';\n _(window.DICTS.outgoing_type).each(function(row) { \n__p+='\\r\\n              <option value=\"'+\n((__t=( row ))==null?'':__t)+\n'\">'+\n((__t=( row ))==null?'':__t)+\n'</option>\\r\\n          ';\n }); \n__p+='\\r\\n     </select>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\"control-group\">\\r\\n    <label class=\"control-label\" for=\"outgoing-note\">Краткое содержание документа</label>\\r\\n    <div class=\"controls\">\\r\\n      <textarea  id=\"outgoing-note\" class=\"span5\" cols=\"20\" rows=\"5\"></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\"control-group\">\\r\\n    <div class=\"controls\">\\r\\n      <button id=\"add-btn\" type=\"submit\" class=\"btn\">Получить номер</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n<div class=\"span5\">\\r\\n    <div class=\"alert alert-success hide\">\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<tr>\\r\\n    <td>'+\n((__t=( number ))==null?'':__t)+\n'</td>\\r\\n    <td>'+\n((__t=( date ))==null?'':__t)+\n'</td>\\r\\n    <td>'+\n((__t=( correspondent ))==null?'':__t)+\n'</td>\\r\\n    <td>'+\n((__t=( type ))==null?'':__t)+\n'</td>\\r\\n    <td>'+\n((__t=( note ))==null?'':__t)+\n'</td>\\r\\n    <td>'+\n((__t=( window.MANAGERS[user] ))==null?'':__t)+\n'</td>\\r\\n</tr>\\r\\n';\n}\nreturn __p;\n};\n","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<table class=\"table-bordered table\" >\\r\\n <thead>\\r\\n     <tr>\\r\\n         <th>№</th>\\r\\n         <th>Дата</th>\\r\\n         <th>Адресат</th>\\r\\n         <th>Тип</th>\\r\\n         <th>Краткое содержание</th>\\r\\n         <th>Пользователь</th>\\r\\n     </tr>\\r\\n </thead>\\r\\n  <tbody class=\"outgoing-table1\">\\r\\n  </tbody>\\r\\n</table>\\r\\n';\n}\nreturn __p;\n};\n","var OutgoingTableTemplate = require('../templates/outgoing_table_template.html');\r\nvar OutgoingItemTemplate = require('../templates/outgoing_table_item_template.html');\r\n\r\nvar OutgoingTableView = Backbone.View.extend({\r\n   el: $('#outgoing-table'),\r\n   initialize: function(){\r\n       this.template = OutgoingTableTemplate;\r\n       this.listenTo(this.collection, 'change reset add remove', this.render);\r\n       this.render();\r\n   },\r\n    render: function(){\r\n        this.$el.html(this.template());\r\n        var self = this;\r\n        this.$(\"tbody\").empty();\r\n        this.collection.models.map(function(item){\r\n            self.renderOne(item);\r\n        });\r\n        return this;\r\n    },\r\n    renderOne: function(item){\r\n        var el = OutgoingItemTemplate(item.toJSON());\r\n        this.$(\"tbody\").prepend(el);\r\n        return el;\r\n    }\r\n});\r\n\r\nmodule.exports = OutgoingTableView;\r\n","var OutgoingModel = require('../models/outgoing_model');\r\nvar OutgoingFormTemplate = require('../templates/outgoing_form_template.html');\r\n\r\nvar OutgoingView = Backbone.View.extend({\r\n    el: $('#outgoing-form'),\r\n    corr_is_new:true,\r\n    find_list:[],\r\n    events: {\r\n        'click #add-btn': 'addNew',\r\n        'click #select-corr': 'findExCorrespondent'\r\n    },\r\n    initialize: function () {\r\n        this.template = OutgoingFormTemplate;\r\n        this.render();\r\n    },\r\n    corrIsNew: function(is_new){\r\n        this.corr_is_new = is_new;\r\n    },\r\n\r\n    corrAjax:function(corr_str, ok){\r\n        $.get(\"/handlers/clientnamefind/?q=\" + encodeURIComponent(corr_str))\r\n        .done(ok);\r\n    },\r\n    findExCorrespondent: function(){\r\n       var $ddm = this.$('#corr-dropdown-menu');\r\n        var self = this;\r\n        var $corr = this.$('#correspondent');\r\n        this.$('#cor-exists').hide();\r\n        $ddm.empty();\r\n        var dd_li = '';\r\n        this.find_list.forEach(function(e){\r\n            dd_li += '<li><a data-name=\"'+e.name+'\" data-id=\"'+e.id+'\" tabindex=\"-1\" href=\"javascript:;\">'+e.name+'<br><span class=\"small-grey\">'+e.addr+'</span></a></li>';\r\n            });\r\n        $ddm.html(dd_li);\r\n        $ddm.show();\r\n\r\n                $('a', $ddm).on('click', function(){\r\n                    $corr.val($(this).data('name').replace(/\\\"/g,'&quot;'));\r\n                    $corr.data('id', $(this).data('id'));\r\n                    $ddm.hide();\r\n                });\r\n\r\n\r\n    },\r\n    findCorrespondent: function(){\r\n        var $corr = this.$('#correspondent');\r\n        var corr_str = $corr.val();\r\n        var $ddm = this.$('#corr-dropdown-menu');\r\n        var self = this;\r\n        $corr.data('id', '');\r\n        this.find_list = [];\r\n        if (corr_str.length < 2) return;\r\n        var done = function(ret){\r\n            $ddm.empty();\r\n                if (ret.result.length > 0){\r\n                    this.corrIsNew(false);\r\n                    var dd_li = '';\r\n                    ret.result.forEach(function(e){\r\n                        if (e.name.toLowerCase().replace(/\\s*/g,'').replace(/\\\"/g,'') === corr_str.toLowerCase().replace(/\\s*/g,'').replace(/\\\"/g,'')){\r\n                            self.find_list.push(e);\r\n                        }\r\n                        dd_li += '<li><a data-name=\"'+e.name+'\" data-id=\"'+e.id+'\" tabindex=\"-1\" href=\"javascript:;\">'+e.name+'<br><span class=\"small-grey\">'+e.addr+'</span></a></li>';\r\n                    });\r\n                    $ddm.html(dd_li);\r\n                    $ddm.show();\r\n//                $ddm.dropdown('toggle');\r\n                $('a', $ddm).on('click', function(){\r\n                    $corr.val($(this).data('name').replace(/\\\"/g,'&quot;'));\r\n                    $corr.data('id', $(this).data('id'));\r\n                    $ddm.hide();\r\n                });\r\n                }\r\n                else{\r\n                    this.corrIsNew(true);\r\n//                    $dd.hide();\r\n//                    $ddm.html('<li><a tabindex=\"-1\" href=\"javascript:;\">'+corr_str+'</a></li>');\r\n                }\r\n\r\n        }.bind(this);\r\n        this.corrAjax(corr_str,done);\r\n    },\r\n\r\n\r\n    autoselectCorr: function(){\r\n        var name = this.$('#correspondent').val();\r\n        if(this.find_list.length === 1){\r\n            this.$('#correspondent').data('id', this.find_list[0].id);\r\n            return;\r\n        }\r\n        if(this.find_list.length > 1){\r\n            this.$('#cor-exists').show();\r\n        }\r\n    },\r\n    render: function () {\r\n        this.$el.html(this.template());\r\n        var $corr = this.$('#correspondent');\r\n        this.$('#corr-dropdown').dropdown();\r\n        var debounced = _.debounce(this.findCorrespondent.bind(this), 300);\r\n        $corr.on('keyup', debounced);\r\n        $corr.on('blur',function(){\r\n            setTimeout( function(){\r\n                var $ddm = this.$('#corr-dropdown-menu');\r\n                if ($ddm.is(':visible')) $ddm.hide();\r\n                var $corr = this.$('#correspondent');\r\n                var $corr_ex = this.$('#cor-exists');\r\n                if (!this.corr_is_new && $corr.data('id') === ''){\r\n                    this.autoselectCorr();\r\n                }\r\n            }.bind(this),200);\r\n        }.bind(this));\r\n        $corr.on('focusin', function(){\r\n            this.$('.alert-success').html('').hide();\r\n            this.$('#cor-exists').hide();\r\n        }.bind(this));\r\n\r\n        return this;\r\n    },\r\n    addNew: function (e) {\r\n        e.preventDefault();\r\n        this.$('#cor-exists').hide();\r\n        var $corr = this.$('#correspondent');\r\n        if (this.$('#outgoing-type').val() === \"\"){\r\n            alert('Выберите тип!');\r\n            return;\r\n        }\r\n        var corr_name = $corr.val().replace(/^\\s*|\\s*$/,'');\r\n        if (corr_name === \"\"){\r\n            alert('Выберите корреспондента!');\r\n            return;\r\n        }\r\n        if (this.$('#outgoing-note').val() === \"\"){\r\n            alert('Введите краткое содержание документа!');\r\n            return;\r\n        }\r\n        var self = this;\r\n        var md = new OutgoingModel();\r\n        $.blockUI({'message':'<img src=\"/static/img/spinner.gif\">', 'css':{'border':'none', 'backgroundColor':'transparent'}, 'overlayCSS':{'backgroundColor':'#fff', 'cursor':'pointer'}});\r\n        md.set({\r\n            correspondent: corr_name,\r\n            correspondent_id: $corr.data('id'),\r\n            //name: this.$('#outgoing-name').val(),\r\n            type: this.$('#outgoing-type').val(),\r\n            note: this.$('#outgoing-note').val(),\r\n            number: 0,\r\n            date: ''\r\n        });\r\n        md.save().done(function (ret) {\r\n            self.collection.add(ret.data);\r\n            self.$('#correspondent').val(\"\").data('id','');\r\n            self.$('#outgoing-name').val(\"\");\r\n            self.$('#outgoing-type').val(\"\");\r\n            self.$('#outgoing-note').val(\"\");\r\n            self.$('.alert-success').html('Исх. № '+ret.data.number+' от '+ ret.data.date)\r\n                .show();\r\n        }).always(function(){$.unblockUI();});\r\n    }\r\n});\r\n\r\nmodule.exports = OutgoingView;\r\n"]}